{"id":"node_modules/firebase-auth/index.js","dependencies":[{"name":"C:\\Users\\HP\\Desktop\\my projects\\todo firebase\\package.json","includedInParent":true,"mtime":1631990706458},{"name":"C:\\Users\\HP\\Desktop\\my projects\\todo firebase\\node_modules\\firebase-auth\\package.json","includedInParent":true,"mtime":1458429018000},{"name":"firebase","loc":{"line":3,"column":23},"parent":"C:\\Users\\HP\\Desktop\\my projects\\todo firebase\\node_modules\\firebase-auth\\index.js","resolved":"C:\\Users\\HP\\Desktop\\my projects\\todo firebase\\node_modules\\firebase-auth\\node_modules\\firebase\\lib\\firebase-web.js"},{"name":"firebase-token-generator","loc":{"line":4,"column":35},"parent":"C:\\Users\\HP\\Desktop\\my projects\\todo firebase\\node_modules\\firebase-auth\\index.js","resolved":"C:\\Users\\HP\\Desktop\\my projects\\todo firebase\\node_modules\\firebase-token-generator\\dist\\firebase-token-generator-node.js"},{"name":"q","loc":{"line":5,"column":14},"parent":"C:\\Users\\HP\\Desktop\\my projects\\todo firebase\\node_modules\\firebase-auth\\index.js","resolved":"C:\\Users\\HP\\Desktop\\my projects\\todo firebase\\node_modules\\q\\q.js"}],"generated":{"js":"'use strict';\n\nvar Firebase = require(\"firebase\"),\n  FirebaseTokenGenerator = require(\"firebase-token-generator\"),\n  Q = require(\"q\");\n\n// Authenticate the server to Firebase\nmodule.exports = function(options) {\n  if (!options.secretKey || !options.rootRef || !options.UID) {\n    throw new Error(\"options cannot be null\");\n  }\n  var deferred = Q.defer();\n  var rootRef = new Firebase(options.rootRef);\n  var tokenGenerator = new FirebaseTokenGenerator(options.secretKey);\n  var token = tokenGenerator.createToken({\n    uid: options.UID\n  }, {\n    admin: options.admin\n  });\n  rootRef.authWithCustomToken(token, function(error) {\n    if (error) {\n      deferred.reject(error);\n      throw error;\n    } else {\n      deferred.resolve(rootRef);\n    }\n  });\n  return deferred.promise;\n};\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/firebase-auth/index.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/firebase-auth/index.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/firebase-auth/index.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/firebase-auth/index.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/firebase-auth/index.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/firebase-auth/index.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/firebase-auth/index.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/firebase-auth/index.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/firebase-auth/index.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/firebase-auth/index.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/firebase-auth/index.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/firebase-auth/index.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/firebase-auth/index.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/firebase-auth/index.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/firebase-auth/index.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/firebase-auth/index.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/firebase-auth/index.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/firebase-auth/index.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/firebase-auth/index.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/firebase-auth/index.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/firebase-auth/index.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/firebase-auth/index.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/firebase-auth/index.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/firebase-auth/index.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/firebase-auth/index.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/firebase-auth/index.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/firebase-auth/index.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/firebase-auth/index.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/firebase-auth/index.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/firebase-auth/index.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}}],"sources":{"node_modules/firebase-auth/index.js":"'use strict';\n\nvar Firebase = require(\"firebase\"),\n  FirebaseTokenGenerator = require(\"firebase-token-generator\"),\n  Q = require(\"q\");\n\n// Authenticate the server to Firebase\nmodule.exports = function(options) {\n  if (!options.secretKey || !options.rootRef || !options.UID) {\n    throw new Error(\"options cannot be null\");\n  }\n  var deferred = Q.defer();\n  var rootRef = new Firebase(options.rootRef);\n  var tokenGenerator = new FirebaseTokenGenerator(options.secretKey);\n  var token = tokenGenerator.createToken({\n    uid: options.UID\n  }, {\n    admin: options.admin\n  });\n  rootRef.authWithCustomToken(token, function(error) {\n    if (error) {\n      deferred.reject(error);\n      throw error;\n    } else {\n      deferred.resolve(rootRef);\n    }\n  });\n  return deferred.promise;\n};\n"},"lineCount":30}},"error":null,"hash":"47329677cfc20646144144bbe36cfa7d","cacheData":{"env":{}}}